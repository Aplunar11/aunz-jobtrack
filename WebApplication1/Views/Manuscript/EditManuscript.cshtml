@model JobTrack.Models.Manuscript.ManuscriptData

<div class="modal fade" data-backdrop="static" data-keyboard="false" id="EditManuscriptModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="min-width:70%" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#009688;color:white">
                <h5 class="modal-title" id="confirmModalLabel">Edit Manuscript</h5>
                <button type="button" class="close modal-close" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Html.BeginForm("EditManuscript", "Manuscript", FormMethod.Post, new { Id = "myForm" }))
            {
                <div class="modal-body">
                    <div id="divMsgClientEdit" class="alert alert-dismissible fade show" role="alert" style="margin-top:10px;">
                        <span id="spanMsgClientEdit">Message</span>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-4">
                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.ManuscriptID, htmlAttributes: new { @class = "control-label col-sm-12" })
                                        <div class="col-sm-12">
                                            @Html.EditorFor(model => model.ManuscriptID, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                            @Html.ValidationMessageFor(model => model.ManuscriptID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@
                                <div class="form-group" style="padding-bottom: 25px;">

                                    @Html.Label("Query", htmlAttributes: new { @class = "control-label col-sm-12" })


                                    <div class="col-sm-6">
                                        @Html.ActionLink("View or Create", "someaction", "somecontroller", new { id = "123" }, null)
                                    </div>

                                </div>

                                <div class="form-group">
                                    @Html.HiddenFor(model => model.ManuscriptID, new { @class = "" })
                                    @Html.LabelFor(model => model.JobNumber, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.JobNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.JobNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ManuscriptTier, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.ManuscriptTier, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.ManuscriptTier, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BPSProductID, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.BPSProductID, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.BPSProductID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ServiceNumber, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.ServiceNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.ServiceNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ManuscriptLegTitle, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.ManuscriptLegTitle, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.ManuscriptLegTitle, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ManuscriptStatus, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.ManuscriptStatus, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.ManuscriptStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TargetPressDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.TargetPressDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.TargetPressDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ActualPressDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.ActualPressDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ActualPressDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.LatupAttribution, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.LatupAttribution, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.LatupAttribution, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                            </div>
                            <div class="col-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DateReceivedFromAuthor, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.DateReceivedFromAuthor, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DateReceivedFromAuthor, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UpdateType, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.UpdateType, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.UpdateType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobSpecificInstruction, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.JobSpecificInstruction, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.JobSpecificInstruction, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TaskType, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.TaskType, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.TaskType, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.PEGuideCard, htmlAttributes: new { @class = "control-label col-sm-12" })
                                        <div class="col-sm-12">
                                            @Html.EditorFor(model => model.PEGuideCard, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PEGuideCard, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PECheckbox, htmlAttributes: new { @class = "control-label col-sm-12" })
                                        <div class="col-sm-12">
                                            @Html.EditorFor(model => model.PECheckbox, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PECheckbox, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PETaskNumber, htmlAttributes: new { @class = "control-label col-sm-12" })
                                        <div class="col-sm-12">
                                            @Html.EditorFor(model => model.PETaskNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PETaskNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.RevisedOnlineDueDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.RevisedOnlineDueDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.RevisedOnlineDueDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CopyEditDueDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.CopyEditDueDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.CopyEditDueDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" style="padding-bottom: 25px;">
                                    @Html.LabelFor(model => model.CopyEditStartDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @*@Html.ActionLink("[START LINK]", "someaction", "somecontroller", Model.CopyEditStartDate, null)*@
                                        @Html.EditorFor(model => model.CopyEditStartDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                            @Html.ValidationMessageFor(model => model.CopyEditStartDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CopyEditDoneDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.CopyEditDoneDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.CopyEditDoneDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CopyEditStatus, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.CopyEditStatus, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.CopyEditStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>




                            </div>
                            <div class="col-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CodingDueDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.CodingDueDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.CodingDueDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CodingDoneDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.CodingDoneDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.CodingDoneDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CodingStatus, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.CodingStatus, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.CodingStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OnlineDueDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.OnlineDueDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.OnlineDueDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OnlineDoneDate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.OnlineDoneDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.OnlineDoneDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OnlineStatus, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.OnlineStatus, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.OnlineStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.STPStatus, htmlAttributes: new { @class = "control-label col-sm-12" })
                                        <div class="col-sm-12">
                                            @Html.EditorFor(model => model.STPStatus, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.STPStatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EstimatedPages, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.EstimatedPages, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                        @Html.ValidationMessageFor(model => model.EstimatedPages, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ActualTurnAroundTime, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.ActualTurnAroundTime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ActualTurnAroundTime, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OnlineTimeliness, htmlAttributes: new { @class = "control-label col-sm-12" })
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.OnlineTimeliness, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OnlineTimeliness, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.ReasonIfLate, htmlAttributes: new { @class = "control-label col-sm-12" })
                                        <div class="col-sm-12">
                                            @Html.EditorFor(model => model.ReasonIfLate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ReasonIfLate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PECoversheetNumber, htmlAttributes: new { @class = "control-label col-sm-12" })
                                        <div class="col-sm-12">
                                            @Html.EditorFor(model => model.PECoversheetNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PECoversheetNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@


                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button id="btnSave" type="button" class="btn btn-success">Update</button>
                    <button type="button" class="btn btn-secondary modal-close">Cancel</button>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    //
    $(document).ready(function () {
        //alert($("#ManuscriptID").val());
            $("#UpdateType").on("change", function () {

                var url = '@Url.Action("GetTaskType", "Home")' + "?selectedItem=" + $(this).val();
                $("#TaskType").load(url, function (data) {
                    $('#TaskType').val(data.replace(/['"]+/g, ''));
                })

                var url = '@Url.Action("GetTATCopyEdit", "Home")' + "?selectedItem=" + $(this).val();
                $("#CopyEditDueDate").load(url, function (data) {
                    $('#CopyEditDueDate').val(data.replace(/['"]+/g, ''));
                })

                var url = '@Url.Action("GetTATCoding", "Home")' + "?selectedItem=" + $(this).val();
                $("#CodingDueDate").load(url, function (data) {
                    $('#CodingDueDate').val(data.replace(/['"]+/g, ''));
                })

                var url = '@Url.Action("GetTATOnline", "Home")' + "?selectedItem=" + $(this).val();
                $("#OnlineDueDate").load(url, function (data) {
                    $('#OnlineDueDate').val(data.replace(/['"]+/g, ''));
                })
            });

        //$("#TargetPressDate").datepicker({ format: 'yyyy-mm-dd' });

        //$("#DateReceivedFromAuthor").datepicker({ format: 'yyyy-mm-dd' });
        //$("#CopyEditDueDate").datepicker({ format: 'yyyy-mm-dd' });
        //$("#CodingDueDate").datepicker({ format: 'yyyy-mm-dd' });
        //$("#OnlineDueDate").datepicker({ format: 'yyyy-mm-dd' });
        $('#ActualPressDate').datepicker({
            format: 'yyyy-mm-dd',
            orientation: "top",
            autoclose: true
        });
        $('#DateReceivedFromAuthor').datepicker({
            format: 'yyyy-mm-dd',
            orientation: "top",
            autoclose: true
        });
        $('#CopyEditDueDate').datepicker({
            format: 'yyyy-mm-dd',
            orientation: "top",
            autoclose: true
        });
        $('#CodingDueDate').datepicker({
            format: 'yyyy-mm-dd',
            orientation: "top",
            autoclose: true
        });
        $('#OnlineDueDate').datepicker({
            format: 'yyyy-mm-dd',
            orientation: "top",
            autoclose: true
        });
        $("#divMsgClientEdit").hide();
        //Update User Data
        $("#btnSave").click(function (e) {
            //Disable save button
            EnableSave(false);
            var $form = $('#myForm');
            //Validate form data
            $.validator.unobtrusive.parse($form);
            if ($form.valid()) {
                var obj =
                {
                    "JobNumber": $("#JobNumber").val(),
                    "ManuscriptTier": $("#ManuscriptTier").val(),
                    "BPSProductID": $("#BPSProductID").val(),
                    "ServiceNumber": $("#ServiceNumber").val(),
                    "ManuscriptLegTitle": $("#ManuscriptLegTitle").val(),
                    "TargetPressDate": $("#TargetPressDate").val(),
                    "LatupAttribution": $("#LatupAttribution").val(),
                    "DateReceivedFromAuthor": $("#DateReceivedFromAuthor").val(),
                    "UpdateType": $("#UpdateType").val(),
                    "JobSpecificInstruction": $("#JobSpecificInstruction").val(),
                    "TaskType": $("#TaskType").val(),
                    "CopyEditDueDate": $("#CopyEditDueDate").val(),
                    "CodingDueDate": $("#CodingDueDate").val(),
                    "OnlineDueDate": $("#OnlineDueDate").val(),
                    "STPStatus": $("#STPStatus").val(),

                };
                var myJSON = JSON.stringify(obj);
                $.ajax({
                    type: "POST",
                    url: $form.attr("action"),
                    data: myJSON,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.Response == "Y") {
                            $("#divMsgClientEdit").addClass("alert-success");
                            $("#spanMsgClientEdit").text("Manuscript added successfully");
                            $("#divMsgClientEdit").show();

                            EnableSave(true);
                        }
                        else {
                            $("#divMsgClientEdit").addClass("alert-warning");
                            $("#spanMsgClientEdit").text(response.ErrorMessage);
                            $("#divMsgClientEdit").show();

                            EnableSave(true);
                        }
                    },
                    failure: function (response) {
                        $("#divMsgClientEdit").addClass("alert-warning");
                        $("#spanMsgClientEdit").text(response.responseText);
                        $("#divMsgClientEdit").show();

                        EnableSave(true);
                    },
                    error: function (response) {
                        $("#divMsgClientEdit").addClass("alert-warning");
                        $("#spanMsgClientEdit").text(response.responseText);
                        $("#divMsgClientEdit").show();

                        EnableSave(true);
                    }

                });

            }
            else {
                EnableSave(true);
                return false;
            }
        });
        //when close modal then reload window to refresh data
        $(".modal-close").click(function () {
            $('#AddNewManuscriptModal').modal('hide');
            window.location.reload();
        });
    });

    function EnableSave(param) {
        if (param == true) {
            $("#btnSave").html("Update");
            $("#btnSave").removeClass("disabled");
        }
        else {
            $("#btnSave").html("Updating...");
            $("#btnSave").addClass('disabled');
        }
    }</script>

