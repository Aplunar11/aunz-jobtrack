@model  JobTrack.Models.QueryManuscript.ReplyModel
@{
    ViewBag.Title = "Reply";
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bs-stepper/dist/css/bs-stepper.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css" integrity="sha512-1PKOgIY59xJ8Co8+NE6FZ+LOAZKjy+KY8iq0G4B3CyeY6wYHN3yt9PW0XpSriVlkMXe40PTKnXrLnZ9+fkDaog==" crossorigin="anonymous" />
    <script src="https://cdn.ckeditor.com/4.15.1/standard-all/ckeditor.js"></script>
    <link href="~/temp/chatbox.css" rel="stylesheet" />
    <title>Query Coversheet</title>
</head>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="offset-md-2 col-10">

                <div class="card-body">
                    <form id="formReply">

                        <div class="row mb-2" style="margin-top: 60px">
                            <div class="col-md-4">
                                <label><b>Topic title: </b></label> &nbsp;
                                <label>@Model.CoverTopicTitle</label>
                            </div>
                        </div>

                        <div class="row mb-2">
                            <div class="col-md-4">
                                <label><b>Query Type: </b></label> &nbsp;
                                <label>@Model.CoverType</label>
                            </div>
                        </div>

                        <div class="row mb-2">
                            <div class="col-md">

                                <div class="row">
                                    <div class="col-md">

                                        <label><b>Cover Status: </b></label> &nbsp;
                                        @*<div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-outline-secondary" style="width: 100px; border-radius: 0" hidden id="label-open">
                                <input type="radio" name="CoverStatusID" value="1" /> Open
                            </label>

                            <label class="btn btn-outline-danger" style="width: 100px" onclick="onclickStatus('cancel')">
                                <input type="radio" name="CoverStatusID" value="2" id="input-cancel" /> Cancel
                            </label>

                            <label class="btn btn-outline-success" style="width: 100px; border-radius: 0" onclick="onclickStatus('close')">
                                <input type="radio" name="CoverStatusID" value="3" id="input-close" /> Close
                            </label>
                        </div>*@

                                        <!-- button select -->
                                        <button type="button" class="btn btn-outline-secondary" onclick="onclickStatus('open');" id="btn-open" hidden>Open</button>
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-outline-danger" onclick="onclickStatus('cancel');" id="btn-cancel">Cancel</button>
                                            <button type="button" class="btn btn-outline-success" onclick="onclickStatus('close');" id="btn-close">Close</button>
                                        </div>

                                        <!-- hidden radiobutton -->
                                        <input type="radio" name="CoverStatusID" value="1" id="radio-open" hidden />
                                        <input type="radio" name="CoverStatusID" value="2" id="radio-cancel" hidden />
                                        <input type="radio" name="CoverStatusID" value="3" id="radio-close" hidden />

                                        @if (!(bool)ViewBag.IsViewOnly)
                                        {
                                            <button type="button" class="btn btn-primary" style="width: 100px" onclick="openComment();">Reply</button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (!(bool)ViewBag.IsViewOnly)
                        {
                            @Html.Partial("CustomControls/_CommentPopupView", new JobTrack.Models.CommentModel { IsViewOnly = (bool)ViewBag.IsViewOnly })
                        }

                        <input type="hidden" name="QueryID" value="@Model.QueryID" />
                        <input type="hidden" name="IsReplied" value="@Model.IsReplied" />
                        <input type="hidden" name="CoversheetID" value="@Model.CoversheetID" />
                        <input type="hidden" name="PreviousStatusID" value="@Model.CoverStatusID" />
                    </form>

                    @if (Model.Replies.Count > 0)
                    {
                        <div class="row">
                            <div class="col-md">
                                <div style="padding: 5px; background-color: green; color: white; text-align: center">POST</div>
                            </div>
                        </div>
                    }

                    <div class="chat-container">
                        @foreach (var reply in Model.Replies)
                        {
                            { Html.RenderPartial("_ReplyBox", reply); }
                        }
                    </div>

                    <div class="mb-3"></div>
                    @if ((bool)ViewBag.IsFromIndex)
                    {
                        <button type="button" class="btn btn-link" onclick="history.back();">< Go Back</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-link" onclick="location.href='/QueryCoversheet/Index?id=@Model.CoversheetID&u=@((int)ViewBag.UserAccess)'">< Go Back</button>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
</html>

<script>
    $(document).ready(function () {
        // set value
        $(':radio[name="CoverStatusID"][value="@(Model.CoverStatusID > 0 ? Model.CoverStatusID : 1)"]').attr('checked', 'checked').parent().addClass('active');
        setupButtons(@Model.CoverStatusID, '@ViewBag.IsViewOnly' == 'True');
    });

    function onclickSubmit() {
        // serialize form data
        let formData = $('#formReply').serializeArray();
        let datasource = {};
        $(formData).each(function (index, obj) {
            datasource[obj.name] = obj.value;
        });

        if (datasource.Message === '') {
            datasource.Message = datasource.CoverStatusID === '2' ? "Cancelled" : "Closed";
        }

        // process data to api
        $.ajax({
            type: 'POST',
            url: '/QueryCoversheet/UpdateReply',
            data: datasource,
            dataType: 'json',
            success: function (response) {

                if (response.success)
                    window.location.reload();
                else
                    alert('Error update.');
            }
        });
    }

    function onclickStatus(id) {
        let isOk = confirm('Are you sure you want to change status? it will save automatically.');
        if (!isOk)
            return;

        $('#radio-' + id).prop('checked', true);
        setTimeout(function () {
            onclickSubmit();
        }, 500);
    }

    function setupButtons(statusId, isRead) {
        $('#btn-open').css('pointer-events', 'none');
        $('.btn-group').css('pointer-events', isRead ? 'none' : 'auto');

        switch (statusId) {
            case 1:
                $('.btn-group').attr('hidden', true);
                $('#btn-open').removeAttr('hidden');
                $('#btn-open').addClass('active');
                break;

            case 2:
                $('#btn-cancel').addClass('active');
                break;

            case 3:
                $('#btn-close').addClass('active');
                break;
        }

        if (!isRead) {
            $('#btn-open').attr('hidden', true);
            $('.btn-group').removeAttr('hidden');
        }
    }

    function openComment() {
        $('#modal-comment').modal('show');
    }
</script>