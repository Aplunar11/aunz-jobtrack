@model JobTrack.Models.Coversheet.EditCoversheetViewModelBase

<style type="text/css">
    a.nav-item {
        text-decoration: none;
    }

    .nav-item {
        color: #090;
        opacity: 0.6;
        position: relative;
        -webkit-transition: opacity 0.2s ease-in-out 0s;
        -moz-transition: opacity 0.2s ease-in-out 0s;
        transition: opacity 0.2s ease-in-out 0s;
    }

        .nav-item:hover {
            color: #090;
            opacity: 1;
        }

        .nav-item:before {
            content: "";
            position: absolute;
            bottom: -2px;
            width: 100%;
            height: 2px;
            z-index: 10;
            background-color: #aca;
            -webkit-transform: scaleX(0);
            -moz-transform: scaleX(0);
            transform: scaleX(0);
            -webkit-transition: all 0.2s ease-in-out 0s;
            -moz-transition: all 0.2s ease-in-out 0s;
            transition: all 0.2s ease-in-out 0s;
        }

        .nav-item:hover:before {
            -webkit-transform: scaleX(1);
            -moz-transform: scaleX(1);
            transform: scaleX(1);
        }

    .nav-item1 {
        color: #e80909;
        opacity: 0.6;
        position: relative;
        -webkit-transition: opacity 0.2s ease-in-out 0s;
        -moz-transition: opacity 0.2s ease-in-out 0s;
        transition: opacity 0.2s ease-in-out 0s;
    }

        .nav-item1:hover {
            color: #e80909;
            opacity: 1;
        }

        .nav-item1:before {
            content: "";
            position: absolute;
            bottom: -2px;
            width: 100%;
            height: 2px;
            z-index: 10;
            background-color: #ccaaaa;
            -webkit-transform: scaleX(0);
            -moz-transform: scaleX(0);
            transform: scaleX(0);
            -webkit-transition: all 0.2s ease-in-out 0s;
            -moz-transition: all 0.2s ease-in-out 0s;
            transition: all 0.2s ease-in-out 0s;
        }

        .nav-item1:hover:before {
            -webkit-transform: scaleX(1);
            -moz-transform: scaleX(1);
            transform: scaleX(1);
        }

    .popover {
        max-width: 1200px;
        max-height: 400px;
    }
</style>
<div class="modal fade" data-backdrop="static" data-keyboard="false" id="EditCodingTLCoversheetModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="min-width:70%" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#009688;color:white">
                <h5 class="modal-title" id="confirmModalLabel">Coding TL Workbench</h5>
                <button type="button" class="close modal-close" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Html.BeginForm("EditTLCoversheet", "Coversheet", FormMethod.Post, new { Id = "myForm" }))
            {
                <div class="modal-body">
                    <div id="divMsgClientEdit" class="alert alert-dismissible fade show" role="alert" style="margin-top:10px;">
                        <span id="spanMsgClientEdit">Message</span>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()

                        @*<div class="col-lg-8 text-center border-bottom-1 mb-0">
                                <h5>TASK DETAILS</h5>
                            </div>*@
                        <!--</div>-->
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-lg-12 text-center border-bottom-1 mb-0">
                                                    <h5>COVERSHEET DETAILS</h5>
                                                </div>
                                            </div>
                                            <div class="basic-form">
                                                <form>
                                                    <div class="row">
                                                        <div class="col-6 border-right-1">
                                                            @Html.HiddenFor(model => model.model1.CoversheetID, new { @class = "" })
                                                            @*@Html.HiddenFor(model => model.model1.ManuscriptID, new { @class = "" })*@

                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.CoversheetNumber, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.CoversheetNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>

                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.ServiceNumber, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.ServiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.TaskNumber, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.TaskNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.BPSProductID, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.BPSProductID, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.Editor, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.Editor, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.ChargeCode, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.ChargeCode, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>

                                                            @*<div class="form-group border-bottom-1 mb-0">
                                                                    @Html.LabelFor(model => model.model1.ActualPressDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                    @Html.DisplayFor(model => model.model1.ActualPressDate, new { htmlAttributes = new { @class = "form-control" } })
                                                                </div>*@
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.SpecialInstruction, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.TextAreaFor(model => model.model1.SpecialInstruction, new { @readonly = "readonly", rows = "5", cols = "45", @class = "form-control", @style = "resize:none;" })
                                                                @*@Html.DisplayFor(model => model.model1.SpecialInstruction, new { htmlAttributes = new { @class = "form-control" } })*@
                                                            </div>

                                                            <div class="form-group mb-0">
                                                                @Html.LabelFor(model => model.model1.TaskType, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.TaskType, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                        </div>
                                                        <div class="col-6">
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.GuideCard, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @*@Html.DisplayFor(model => model.model1.GuideCard, new { htmlAttributes = new { @class = "form-control" } })*@
                                                                @Html.TextAreaFor(model => model.model1.GuideCard, new { @readonly = "readonly", rows = "5", cols = "45", @class = "form-control", @style = "resize:none;" })
                                                            </div>
                                                            <div class="form-group mb-0">
                                                                @Html.LabelFor(model => model.model1.FurtherInstructions, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @*@Html.DisplayFor(model => model.model1.FurtherInstructions, new { htmlAttributes = new { @class = "form-control" } })*@
                                                                @Html.TextAreaFor(model => model.model1.FurtherInstructions, new { @readonly = "readonly", rows = "5", cols = "45", @class = "form-control", @style = "resize:none;" })
                                                            </div>
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.UpdateType, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.UpdateType, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.GeneralData, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.GeneralData, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                            <div class="form-group mb-0">
                                                                @Html.LabelFor(model => model.model1.TargetPressDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.TargetPressDate, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-lg-12 text-center border-bottom-1 mb-0">
                                                    <h5>TASK DETAILS</h5>
                                                </div>
                                            </div>
                                            <div class="basic-form">
                                                <form>
                                                    <div class="col-lg-12">

                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.AcceptedDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.AcceptedDate, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.JobOwner, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.JobOwner, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.CurrentTask, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.CurrentTask, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.TaskStatus, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.TaskStatus, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        @*<div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.UpdateEmailCC, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.UpdateEmailCC, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>*@
                                                        <div class="form-group mb-0 no-gutters">
                                                            @Html.LabelFor(model => model.model1.UpdateEmailCC, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })

                                                            @Html.EditorFor(model => model.model1.UpdateEmailCC, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.model1.UpdateEmailCC, "", new { @class = "text-danger" })

                                                        </div>
                                                        @*<div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.CorrectionDueDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.CorrectionDueDate, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>
                                                            <div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.CorrectionData, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.CorrectionData, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>*@
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.OnlineTimeliness, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.OnlineTimeliness, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.ReasonIfLate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.ReasonIfLate, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        <div class="form-group mb-0">
                                                            @Html.LabelFor(model => model.model1.DateCreated, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        @*<div class="form-group border-bottom-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.SubsequentPass, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.ActionLink("[CLICK TO REDIRECT]", null, null, Model.model1.SubsequentPass, new { @class = "", @Href = "#" })
                                                            </div>*@

                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-lg-12 text-center border-bottom-1 mb-0">
                                                    <h5>XML EDITING</h5>
                                                </div>
                                            </div>
                                            <div class="basic-form">
                                                <form>
                                                    <div class="col-lg-12">
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            <div class="row justify-content-start">
                                                                <div class="col-3">
                                                                    @Html.LabelFor(model => model.model1.XMLEditing, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                    @Html.CheckBoxFor(model => model.model1.XMLEditing, new { htmlAttributes = new { @class = "form-control", @checked = "checked" } })

                                                                </div>
                                                                <div class="col">
                                                                    <a href="#" id="tglr" class="popover-toggle" title="Subsequent Pass Log">SUBSEQUENT PASS LOG</a>
                                                                </div>
                                                                @*<a class="pop-show btn btn-primary" tabindex="0" type="button" style="margin:100px;" data-toggle="popover" title="Your Popover Title" data-content="">Show</a>*@
                                                                @*<a data-toggle="popover" data-container="body" data-placement="right" type="button" data-html="true" href="#" id="logout"><span class="fa fa-envelope-o" style="margin:3px 0 0 0"></span></a>*@
                                                            </div>

                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.CodingDueDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.CodingDueDate, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.CodingStartDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.ActionLink("[START]", null, null, Model.model1.OnlineDoneDate, new { @class = "btn btn-default disabled nav-item getdate", @Href = "#" })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.CodingDoneDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.ActionLink("[DONE]", null, null, Model.model1.OnlineDoneDate, new { @class = "btn btn-default disabled nav-item1 getdate", @Href = "#" })
                                                        </div>
                                                        @*<div class="form-group border-left-1 border-right-1 mb-0">
                                                                @Html.LabelFor(model => model.model1.SubTask, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.SubTask, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>*@
                                                        <div class="form-group border-bottom-1 mb-0 no-gutters">

                                                            @Html.LabelFor(model => model.model1.SubTask, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })

                                                            @Html.EditorFor(model => model.model1.SubTask, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.model1.SubTask, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0 no-gutters">

                                                            @Html.LabelFor(model => model.model1.PDFQCStatus, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })

                                                            @Html.EditorFor(model => model.model1.PDFQCStatus, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.model1.PDFQCStatus, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.PDFQCStartDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.ActionLink("[START]", null, null, Model.model1.PDFQCStartDate, new { @class = "btn btn-default disabled nav-item getdate", @Href = "#" })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.PDFQCDoneDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.ActionLink("[DONE]", null, null, Model.model1.PDFQCDoneDate, new { @class = "btn btn-default disabled nav-item1 getdate", @Href = "#" })
                                                        </div>
                                                        @*<div class="form-group border-left-1 border-right-1  mb-0">
                                                                @Html.LabelFor(model => model.model1.PDFQCStatus, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                                @Html.DisplayFor(model => model.model1.PDFQCStatus, new { htmlAttributes = new { @class = "form-control" } })
                                                            </div>*@
                                                        @*<div class="form-group border-left-1 border-right-1 mb-0 no-gutters">

                                                                @if (TempData["EmailType"] != null)
                                                                {
                                                                    @Html.LabelFor(model => model.model2.CompletionEmailType, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })
                                                                    <div class="col-sm-12">
                                                                        @Html.DropDownListFor(model => model.model2.CompletionEmailType, TempData["EmailType"] as SelectList, "-- Select --", new { htmlAttributes = new { @class = "form-control" } })
                                                                        @Html.ValidationMessageFor(model => model.model2.CompletionEmailType, "", new { @class = "text-danger" })
                                                                    </div>
                                                                }
                                                            </div>
                                                            <div class="form-group border-left-1 border-right-1 mb-0 no-gutters">

                                                                @Html.LabelFor(model => model.model2.CompletionEmailReceipient, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })

                                                                @Html.EditorFor(model => model.model2.CompletionEmailReceipient, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(model => model.model2.CompletionEmailType, "", new { @class = "text-danger" })
                                                            </div>
                                                            <div class="form-group border-left-1 border-right-1 mb-0 no-gutters">

                                                                @Html.LabelFor(model => model.model2.CompletionEmailSubject, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })

                                                                @Html.EditorFor(model => model.model2.CompletionEmailSubject, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(model => model.model2.CompletionEmailSubject, "", new { @class = "text-danger" })
                                                            </div>*@
                                                        <div class="form-group border-bottom-1 mb-0 no-gutters">

                                                            @Html.LabelFor(model => model.model2.AttachmentBody, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })

                                                            @*@Html.EditorFor(model => model.model2.CompletionEmailBody , new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })*@
                                                            @Html.TextAreaFor(model => model.model2.AttachmentBody, new { rows = "5", cols = "45", @class = "form-control", @style = "resize:none;" })
                                                            @Html.ValidationMessageFor(model => model.model2.AttachmentBody, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="form-group mb-0 no-gutters">

                                                            @Html.LabelFor(model => model.model2.AttachmentName, htmlAttributes: new { @class = "control-label col-sm-12 text-nowrap text-uppercase font-weight-bold" })

                                                            @Html.TextBoxFor(model => model.model2.AttachmentName, new { @type = "file", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.model2.AttachmentName, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="d-flex form-group mb-0 no-gutters">
                                                            <div class="p-2">
                                                                <button id="btnSubmit" class="btn btn-success btn-circle float-right"><i class="fa fa-envelope-o"></i>&nbsp;&nbsp;Submit</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-lg-12 text-center border-bottom-1 mb-0">
                                                    <h5>ONLINE</h5>
                                                </div>
                                            </div>
                                            <div class="basic-form">
                                                <form>
                                                    <div class="col-lg-12">
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.OnlineStatus, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.CheckBoxFor(model => model.model1.OnlineStatus, new { htmlAttributes = new { @class = "form-control", @checked = "checked" } })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.OnlineDueDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.DisplayFor(model => model.model1.OnlineDueDate, new { htmlAttributes = new { @class = "form-control" } })
                                                        </div>
                                                        <div class="form-group border-bottom-1 mb-0">
                                                            @Html.LabelFor(model => model.model1.OnlineStartDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.ActionLink("[START]", null, null, Model.model1.OnlineStartDate, new { @class = "btn btn-default disabled nav-item getdate", @Href = "#" })
                                                        </div>
                                                        <div class="form-group mb-0">
                                                            @Html.LabelFor(model => model.model1.OnlineDoneDate, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            @Html.ActionLink("[DONE]", null, null, Model.model1.OnlineDoneDate, new { @class = "btn btn-default disabled nav-item1 getdate", @Href = "#" })
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-horizontal">
                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-lg-12 text-center border-bottom-1 mb-0">
                                            <h5>QUERIES</h5>
                                        </div>
                                    </div>
                                    <div class="basic-form">
                                        <form>
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    <div class="outer">
                                                        <table class="display nowrap" id="TABLE_3" style="width: 100%;">
                                                            <thead class="table-header-footer">
                                                                <tr>
                                                                    <th>Query Status</th>
                                                                    <th>Query ID</th>
                                                                    <th>Query Number</th>
                                                                    <th>Query Type</th>
                                                                    <th>Topic Title</th>
                                                                    <th>Date Posted</th>
                                                                    <th>Posted By</th>
                                                                </tr>
                                                            </thead>
                                                            <tfoot class="table-header-footer">
                                                                <tr>
                                                                    <th>Query Status</th>
                                                                    <th>Query ID</th>
                                                                    <th>Query Number</th>
                                                                    <th>Query Type</th>
                                                                    <th>Topic Title</th>
                                                                    <th>Date Posted</th>
                                                                    <th>Posted By</th>
                                                                </tr>
                                                            </tfoot>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSave" type="button" class="btn btn-success">Update</button>
                    <button type="button" class="btn btn-secondary modal-close">Cancel</button>
                </div>
            }
            <div id="customdiv" style="display: none">

                <div class="row">
                    <div class="col-lg-12">
                        <div class="outer">
                            <table class="display nowrap" id="TABLE_3" style="width: 100%;">
                                <thead class="table-header-footer">
                                    <tr>
                                        <th>Subsequent Pass Number</th>
                                        <th>Due Date</th>
                                        <th>Start Date</th>
                                        <th>Completion Date</th>
                                        <th>Email Template</th>
                                        <th>Attachment</th>
                                        <th>Date Created</th>
                                    </tr>
                                </thead>
                                <tfoot class="table-header-footer">
                                    <tr>
                                        <th>Subsequent Pass Number</th>
                                        <th>Due Date</th>
                                        <th>Start Date</th>
                                        <th>Completion Date</th>
                                        <th>Email Template</th>
                                        <th>Attachment</th>
                                        <th>Date Created</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    //
    $('.datepicker').datepicker({
        todayHighlight: true,
        format: 'yyyy-mm-dd',
        clearBtn: true,
        autoclose: true
    });
    $(document).ready(function () {
        //
        $('#tglr').popover({
            html: true,
            sanitize: false,
            trigger: 'hover focus',
            content: function () {
                return $('#customdiv').html();
            }
        });
        //
            $("#UpdateType").on("change", function () {

                var url = '@Url.Action("GetTaskType", "Home")' + "?selectedItem=" + $(this).val();
                $("#TaskType").load(url, function (data) {
                    $('#TaskType').val(data.replace(/['"]+/g, ''));
                })

                var url = '@Url.Action("GetTATCopyEdit", "Home")' + "?selectedItem=" + $(this).val();
                $("#CopyEditDueDate").load(url, function (data) {
                    $('#CopyEditDueDate').val(data.replace(/['"]+/g, ''));
                })

                var url = '@Url.Action("GetTATCoding", "Home")' + "?selectedItem=" + $(this).val();
                $("#CodingDueDate").load(url, function (data) {
                    $('#CodingDueDate').val(data.replace(/['"]+/g, ''));
                })

                var url = '@Url.Action("GetTATOnline", "Home")' + "?selectedItem=" + $(this).val();
                $("#OnlineDueDate").load(url, function (data) {
                    $('#OnlineDueDate').val(data.replace(/['"]+/g, ''));
                })
            });

        $("#divMsgClientEdit").hide();
        //Update User Data
        $("#btnSave").click(function (e) {
            //Disable save button
            EnableSave(false);
            var $form = $('#myForm');
            //Validate form data
            $.validator.unobtrusive.parse($form);
            if ($form.valid()) {
                var obj =
                {
                    "JobNumber": $("#JobNumber").val(),
                    "ManuscriptTier": $("#ManuscriptTier").val(),
                    "BPSProductID": $("#BPSProductID").val(),
                    "ServiceNumber": $("#ServiceNumber").val(),
                    "ManuscriptLegTitle": $("#ManuscriptLegTitle").val(),
                    "TargetPressDate": $("#TargetPressDate").val(),
                    "LatupAttribution": $("#LatupAttribution").val(),
                    "DateReceivedFromAuthor": $("#DateReceivedFromAuthor").val(),
                    "UpdateType": $("#UpdateType").val(),
                    "JobSpecificInstruction": $("#JobSpecificInstruction").val(),
                    "TaskType": $("#TaskType").val(),
                    "CopyEditDueDate": $("#CopyEditDueDate").val(),
                    "CodingDueDate": $("#CodingDueDate").val(),
                    "OnlineDueDate": $("#OnlineDueDate").val(),
                    "STPStatus": $("#STPStatus").val(),

                };
                var myJSON = JSON.stringify(obj);
                $.ajax({
                    type: "POST",
                    url: $form.attr("action"),
                    data: myJSON,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.Response == "Y") {
                            $("#divMsgClientEdit").addClass("alert-success");
                            $("#spanMsgClientEdit").text("Manuscript added successfully");
                            $("#divMsgClientEdit").show();

                            EnableSave(true);
                        }
                        else {
                            $("#divMsgClientEdit").addClass("alert-warning");
                            $("#spanMsgClientEdit").text(response.ErrorMessage);
                            $("#divMsgClientEdit").show();

                            EnableSave(true);
                        }
                    },
                    failure: function (response) {
                        $("#divMsgClientEdit").addClass("alert-warning");
                        $("#spanMsgClientEdit").text(response.responseText);
                        $("#divMsgClientEdit").show();

                        EnableSave(true);
                    },
                    error: function (response) {
                        $("#divMsgClientEdit").addClass("alert-warning");
                        $("#spanMsgClientEdit").text(response.responseText);
                        $("#divMsgClientEdit").show();

                        EnableSave(true);
                    }

                });

            }
            else {
                EnableSave(true);
                return false;
            }
        });
        //when close modal then reload window to refresh data
        $(".modal-close").click(function () {
            $('#AddNewManuscriptModal').modal('hide');
            window.location.reload();
        });

        //query
        // Setup - add a text input to each footer cell
        $("table[id^='TABLE'] tfoot th").each(function () {
            var title = $(this).text();
            $(this).html('<input type="text" placeholder="' + title + '" />');
        });
        //Enable datatable on table
        var dataTableUser = $("table[id^='TABLE']").DataTable(
            {
                dom: 'Bfrtip',
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ],
                initComplete: function () {
                    // Apply the search
                    this.api().columns().every(function () {
                        var that = this;

                        $('input', this.footer()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                that
                                    .search(this.value)
                                    .draw();
                            }
                        });
                    });
                }
            }
        );
    });

    function EnableSave(param) {
        if (param == true) {
            $("#btnSave").html("Update");
            $("#btnSave").removeClass("disabled");
        }
        else {
            $("#btnSave").html("Updating...");
            $("#btnSave").addClass('disabled');
        }
    }
    //populate date on anchor tag click
    //$(document).on("click", ".getdate", function () {
    //    var d = new Date();
    //    var month = d.getMonth() + 1;
    //    var day = d.getDate();
    //    var time = d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
    //    var output = d.getFullYear() + '-' +
    //        (month < 10 ? '0' : '') + month + '-' +
    //        (day < 10 ? '0' : '') + day + " " + time;
    //    $(this).text(output);
    //});
</script>
